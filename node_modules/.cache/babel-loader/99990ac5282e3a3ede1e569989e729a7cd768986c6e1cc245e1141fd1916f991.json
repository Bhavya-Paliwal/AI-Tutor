{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BhavyaPaliwal\\\\ai-tutor-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MessageCircle, X, Send, Bot, User, Square } from 'lucide-react';\nimport { getApiUrl } from './config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: '1',\n    text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\n    sender: 'bot',\n    timestamp: new Date()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const abortControllerRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (isChatOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isChatOpen]);\n  const handleStop = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort(); // stop receiving data\n      abortControllerRef.current = null;\n    }\n    setIsLoading(false);\n    setMessages(prev => prev.map(m => m.isStreaming ? {\n      ...m,\n      isStreaming: false\n    } : m));\n  };\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsLoading(true);\n    const botMessageId = (Date.now() + 1).toString();\n    const streamingMessage = {\n      id: botMessageId,\n      text: '',\n      sender: 'bot',\n      timestamp: new Date(),\n      isStreaming: true\n    };\n    setMessages(prev => [...prev, streamingMessage]);\n    abortControllerRef.current = new AbortController();\n    const signal = abortControllerRef.current.signal;\n    try {\n      var _response$body;\n      const apiUrl = getApiUrl('/api/tutor/ask/stream'); // streaming endpoint\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: userMessage.text\n        }),\n        signal\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${await response.text()}`);\n      }\n      const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n      if (!reader) throw new Error('No response body');\n      const decoder = new TextDecoder();\n      let accumulated = '';\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        accumulated += decoder.decode(value, {\n          stream: true\n        });\n        const safeHtml = accumulated.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>').replace(/`([^`]+)`/g, '<code>$1</code>').replace(/\\n/g, '<br>');\n        setMessages(prev => prev.map(m => m.id === botMessageId ? {\n          ...m,\n          text: safeHtml\n        } : m));\n      }\n    } catch (err) {\n      if (err.name === 'AbortError') {\n        setMessages(prev => prev.map(m => m.id === botMessageId ? {\n          ...m,\n          text: '[âœ‹ Stopped by user]'\n        } : m));\n      } else {\n        setMessages(prev => prev.map(m => m.id === botMessageId ? {\n          ...m,\n          text: `Error: ${err.message}`\n        } : m));\n      }\n    } finally {\n      setIsLoading(false);\n      abortControllerRef.current = null;\n      setMessages(prev => prev.map(m => m.id === botMessageId ? {\n        ...m,\n        isStreaming: false\n      } : m));\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      isLoading ? handleStop() : handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-widget ${isChatOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-content\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            className: \"chat-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Tutor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              children: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsChatOpen(false),\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user' : 'bot'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.sender === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              dangerouslySetInnerHTML: {\n                __html: message.text\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), message.isStreaming && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"typing-indicator\",\n              children: \"\\u258B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your question...\",\n          disabled: false,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isLoading ? handleStop : handleSendMessage,\n          disabled: !inputText.trim() && !isLoading,\n          className: \"send-button\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Square, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Send, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-toggle-button\",\n      onClick: () => setIsChatOpen(!isChatOpen),\n      children: isChatOpen ? /*#__PURE__*/_jsxDEV(X, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(MessageCircle, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cAV4aLJdJVYSotUfNeEvmi0iCfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageCircle","X","Send","Bot","User","Square","getApiUrl","jsxDEV","_jsxDEV","App","_s","isChatOpen","setIsChatOpen","messages","setMessages","id","text","sender","timestamp","Date","inputText","setInputText","isLoading","setIsLoading","abortControllerRef","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","handleStop","abort","prev","map","m","isStreaming","handleSendMessage","trim","userMessage","now","toString","botMessageId","streamingMessage","AbortController","signal","_response$body","apiUrl","response","fetch","method","headers","body","JSON","stringify","question","ok","Error","status","reader","getReader","decoder","TextDecoder","accumulated","done","value","read","decode","stream","safeHtml","replace","err","name","message","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","dangerouslySetInnerHTML","__html","toLocaleTimeString","hour","minute","ref","type","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/BhavyaPaliwal/ai-tutor-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { MessageCircle, X, Send, Bot, User, Square } from 'lucide-react';\r\nimport { getApiUrl } from './config';\r\nimport './App.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  isStreaming?: boolean;\r\n}\r\n\r\nfunction App() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: '1',\r\n      text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\r\n      sender: 'bot',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isChatOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isChatOpen]);\r\n\r\n  const handleStop = () => {\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort(); // stop receiving data\r\n      abortControllerRef.current = null;\r\n    }\r\n    setIsLoading(false);\r\n    setMessages(prev =>\r\n      prev.map(m => m.isStreaming ? { ...m, isStreaming: false } : m)\r\n    );\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim() || isLoading) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n    setIsLoading(true);\r\n\r\n    const botMessageId = (Date.now() + 1).toString();\r\n    const streamingMessage: Message = {\r\n      id: botMessageId,\r\n      text: '',\r\n      sender: 'bot',\r\n      timestamp: new Date(),\r\n      isStreaming: true\r\n    };\r\n\r\n    setMessages(prev => [...prev, streamingMessage]);\r\n\r\n    abortControllerRef.current = new AbortController();\r\n    const signal = abortControllerRef.current.signal;\r\n\r\n    try {\r\n      const apiUrl = getApiUrl('/api/tutor/ask/stream'); // streaming endpoint\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ question: userMessage.text }),\r\n        signal\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n      }\r\n\r\n      const reader = response.body?.getReader();\r\n      if (!reader) throw new Error('No response body');\r\n\r\n      const decoder = new TextDecoder();\r\n      let accumulated = '';\r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n\r\n        accumulated += decoder.decode(value, { stream: true });\r\n\r\n        const safeHtml = accumulated\r\n          .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n          .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n          .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>')\r\n          .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n          .replace(/\\n/g, '<br>');\r\n\r\n        setMessages(prev =>\r\n          prev.map(m => m.id === botMessageId ? { ...m, text: safeHtml } : m)\r\n        );\r\n      }\r\n\r\n    } catch (err: any) {\r\n      if (err.name === 'AbortError') {\r\n        setMessages(prev =>\r\n          prev.map(m => m.id === botMessageId ? { ...m, text: '[âœ‹ Stopped by user]' } : m)\r\n        );\r\n      } else {\r\n        setMessages(prev =>\r\n          prev.map(m => m.id === botMessageId ? { ...m, text: `Error: ${err.message}` } : m)\r\n        );\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n      abortControllerRef.current = null;\r\n      setMessages(prev =>\r\n        prev.map(m => m.id === botMessageId ? { ...m, isStreaming: false } : m)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      isLoading ? handleStop() : handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Chat Widget */}\r\n      <div className={`chat-widget ${isChatOpen ? 'open' : ''}`}>\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-header-content\">\r\n            <Bot className=\"chat-icon\" />\r\n            <div>\r\n              <h3>AI Tutor</h3>\r\n              <span className=\"status\">Online</span>\r\n            </div>\r\n          </div>\r\n          <button className=\"close-button\" onClick={() => setIsChatOpen(false)}>\r\n            <X size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map(message => (\r\n            <div\r\n              key={message.id}\r\n              className={`message ${message.sender === 'user' ? 'user' : 'bot'}`}\r\n            >\r\n              <div className=\"message-avatar\">\r\n                {message.sender === 'user' ? <User size={16} /> : <Bot size={16} />}\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <div\r\n                  className=\"message-text\"\r\n                  dangerouslySetInnerHTML={{ __html: message.text }}\r\n                />\r\n                {message.isStreaming && <span className=\"typing-indicator\">â–‹</span>}\r\n                <div className=\"message-time\">\r\n                  {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Chat Input */}\r\n        <div className=\"chat-input-container\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={e => setInputText(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your question...\"\r\n            disabled={false}\r\n            className=\"chat-input\"\r\n          />\r\n          <button\r\n            onClick={isLoading ? handleStop : handleSendMessage}\r\n            disabled={!inputText.trim() && !isLoading}\r\n            className=\"send-button\"\r\n          >\r\n            {isLoading ? <Square size={18} /> : <Send size={18} />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Floating Chat Button */}\r\n      <button\r\n        className=\"chat-toggle-button\"\r\n        onClick={() => setIsChatOpen(!isChatOpen)}\r\n      >\r\n        {isChatOpen ? <X size={24} /> : <MessageCircle size={24} />}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}