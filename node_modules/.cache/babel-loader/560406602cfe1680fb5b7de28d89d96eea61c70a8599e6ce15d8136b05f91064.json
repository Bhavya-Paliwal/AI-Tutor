{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BhavyaPaliwal\\\\ai-tutor-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MessageCircle, X, Send, Bot, User } from 'lucide-react';\nimport { getApiUrl } from './config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: '1',\n    text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\n    sender: 'bot',\n    timestamp: new Date()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAborted, setIsAborted] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (isChatOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isChatOpen]);\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isLoading) return;\n\n    // Abort previous request\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n    setIsAborted(false);\n    setIsLoading(true);\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    const botMessageId = (Date.now() + 1).toString();\n    const streamingMessage = {\n      id: botMessageId,\n      text: '',\n      sender: 'bot',\n      timestamp: new Date(),\n      isStreaming: true\n    };\n    setMessages(prev => [...prev, streamingMessage]);\n    try {\n      const apiUrl = getApiUrl('/api/Tutor/ask');\n      const requestBody = {\n        message: inputText,\n        question: inputText,\n        query: inputText,\n        prompt: inputText\n      };\n      const controller = new AbortController();\n      abortControllerRef.current = controller;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody),\n        signal: controller.signal\n      });\n      const contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n      const formatResponse = text => {\n        return text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>').replace(/`([^`]+)`/g, '<code>$1</code>').replace(/\\n/g, '<br>');\n      };\n      if (contentType && contentType.includes('application/json')) {\n        const jsonResponse = await response.json();\n        let answer = jsonResponse.answer || jsonResponse.message || jsonResponse.response || jsonResponse.content || (typeof jsonResponse === 'string' ? jsonResponse : JSON.stringify(jsonResponse));\n        let displayText = '';\n        for (let i = 0; i < answer.length; i++) {\n          if (isAborted) break;\n          displayText += answer[i];\n          const formattedText = formatResponse(displayText);\n          setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n            ...msg,\n            text: formattedText\n          } : msg));\n          await new Promise(resolve => setTimeout(resolve, 20));\n        }\n      } else {\n        var _response$body;\n        const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n        if (!reader) throw new Error('No response body');\n        let accumulatedText = '';\n        while (true) {\n          if (isAborted) break;\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) break;\n          const chunk = new TextDecoder().decode(value);\n          accumulatedText += chunk;\n          setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n            ...msg,\n            text: accumulatedText\n          } : msg));\n        }\n      }\n      setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n        ...msg,\n        isStreaming: false\n      } : msg));\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n          ...msg,\n          text: 'Response stopped by user.',\n          isStreaming: false\n        } : msg));\n      } else {\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n        setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n          ...msg,\n          text: `Error: ${errorMessage}. Please check your backend connection.`,\n          isStreaming: false\n        } : msg));\n      }\n    } finally {\n      setIsLoading(false);\n      abortControllerRef.current = null;\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleStopClick = () => {\n    setIsAborted(true);\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-widget ${isChatOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-content\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            className: \"chat-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Tutor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              children: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsChatOpen(false),\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user' : 'bot'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.sender === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              dangerouslySetInnerHTML: {\n                __html: message.text\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), message.isStreaming && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"typing-indicator\",\n              children: \"\\u258B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your question...\",\n          disabled: isLoading,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStopClick,\n          className: \"stop-button\",\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputText.trim() || isLoading,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-toggle-button\",\n      onClick: () => setIsChatOpen(!isChatOpen),\n      children: isChatOpen ? /*#__PURE__*/_jsxDEV(X, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(MessageCircle, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xbwh6P+KnGPeJ+0FFzjraYomock=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageCircle","X","Send","Bot","User","getApiUrl","jsxDEV","_jsxDEV","App","_s","isChatOpen","setIsChatOpen","messages","setMessages","id","text","sender","timestamp","Date","inputText","setInputText","isLoading","setIsLoading","isAborted","setIsAborted","messagesEndRef","inputRef","abortControllerRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","handleSendMessage","trim","abort","userMessage","now","toString","prev","botMessageId","streamingMessage","isStreaming","apiUrl","requestBody","message","question","query","prompt","controller","AbortController","response","fetch","method","headers","body","JSON","stringify","signal","contentType","get","ok","errorText","Error","status","formatResponse","replace","includes","jsonResponse","json","answer","content","displayText","i","length","formattedText","map","msg","Promise","resolve","setTimeout","_response$body","reader","getReader","accumulatedText","done","value","read","chunk","TextDecoder","decode","error","name","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","handleStopClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","dangerouslySetInnerHTML","__html","toLocaleTimeString","hour","minute","ref","type","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/BhavyaPaliwal/ai-tutor-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { MessageCircle, X, Send, Bot, User } from 'lucide-react';\r\nimport { getApiUrl } from './config';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: '1',\r\n      text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\r\n      sender: 'bot',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isAborted, setIsAborted] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const abortControllerRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isChatOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isChatOpen]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim() || isLoading) return;\r\n\r\n    // Abort previous request\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort();\r\n    }\r\n\r\n    setIsAborted(false);\r\n    setIsLoading(true);\r\n\r\n    const userMessage = {\r\n      id: Date.now().toString(),\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n\r\n    const botMessageId = (Date.now() + 1).toString();\r\n    const streamingMessage = {\r\n      id: botMessageId,\r\n      text: '',\r\n      sender: 'bot',\r\n      timestamp: new Date(),\r\n      isStreaming: true\r\n    };\r\n\r\n    setMessages(prev => [...prev, streamingMessage]);\r\n\r\n    try {\r\n      const apiUrl = getApiUrl('/api/Tutor/ask');\r\n      const requestBody = {\r\n        message: inputText,\r\n        question: inputText,\r\n        query: inputText,\r\n        prompt: inputText\r\n      };\r\n\r\n      const controller = new AbortController();\r\n      abortControllerRef.current = controller;\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n        signal: controller.signal\r\n      });\r\n\r\n      const contentType = response.headers.get('content-type');\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n      }\r\n\r\n      const formatResponse = (text) => {\r\n        return text\r\n          .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n          .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n          .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>')\r\n          .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n          .replace(/\\n/g, '<br>');\r\n      };\r\n\r\n      if (contentType && contentType.includes('application/json')) {\r\n        const jsonResponse = await response.json();\r\n\r\n        let answer = jsonResponse.answer || jsonResponse.message || jsonResponse.response || jsonResponse.content || (typeof jsonResponse === 'string' ? jsonResponse : JSON.stringify(jsonResponse));\r\n\r\n        let displayText = '';\r\n        for (let i = 0; i < answer.length; i++) {\r\n          if (isAborted) break;\r\n          displayText += answer[i];\r\n          const formattedText = formatResponse(displayText);\r\n          setMessages(prev =>\r\n            prev.map(msg =>\r\n              msg.id === botMessageId\r\n                ? { ...msg, text: formattedText }\r\n                : msg\r\n            )\r\n          );\r\n          await new Promise(resolve => setTimeout(resolve, 20));\r\n        }\r\n      } else {\r\n        const reader = response.body?.getReader();\r\n        if (!reader) throw new Error('No response body');\r\n\r\n        let accumulatedText = '';\r\n        while (true) {\r\n          if (isAborted) break;\r\n          const { done, value } = await reader.read();\r\n          if (done) break;\r\n          const chunk = new TextDecoder().decode(value);\r\n          accumulatedText += chunk;\r\n          setMessages(prev =>\r\n            prev.map(msg =>\r\n              msg.id === botMessageId\r\n                ? { ...msg, text: accumulatedText }\r\n                : msg\r\n            )\r\n          );\r\n        }\r\n      }\r\n\r\n      setMessages(prev =>\r\n        prev.map(msg =>\r\n          msg.id === botMessageId\r\n            ? { ...msg, isStreaming: false }\r\n            : msg\r\n        )\r\n      );\r\n\r\n    } catch (error) {\r\n      if (error.name === 'AbortError') {\r\n        setMessages(prev =>\r\n          prev.map(msg =>\r\n            msg.id === botMessageId\r\n              ? { ...msg, text: 'Response stopped by user.', isStreaming: false }\r\n              : msg\r\n          )\r\n        );\r\n      } else {\r\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n        setMessages(prev =>\r\n          prev.map(msg =>\r\n            msg.id === botMessageId\r\n              ? { ...msg, text: `Error: ${errorMessage}. Please check your backend connection.`, isStreaming: false }\r\n              : msg\r\n          )\r\n        );\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n      abortControllerRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleStopClick = () => {\r\n    setIsAborted(true);\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Chat Widget */}\r\n      <div className={`chat-widget ${isChatOpen ? 'open' : ''}`}>\r\n        {/* Chat Header */}\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-header-content\">\r\n            <Bot className=\"chat-icon\" />\r\n            <div>\r\n              <h3>AI Tutor</h3>\r\n              <span className=\"status\">Online</span>\r\n            </div>\r\n          </div>\r\n          <button className=\"close-button\" onClick={() => setIsChatOpen(false)}>\r\n            <X size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Chat Messages */}\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`message ${message.sender === 'user' ? 'user' : 'bot'}`}\r\n            >\r\n              <div className=\"message-avatar\">\r\n                {message.sender === 'user' ? <User size={16} /> : <Bot size={16} />}\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <div\r\n                  className=\"message-text\"\r\n                  dangerouslySetInnerHTML={{ __html: message.text }}\r\n                />\r\n                {message.isStreaming && <span className=\"typing-indicator\">▋</span>}\r\n                <div className=\"message-time\">\r\n                  {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Chat Input */}\r\n        <div className=\"chat-input-container\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your question...\"\r\n            disabled={isLoading}\r\n            className=\"chat-input\"\r\n          />\r\n          {isLoading ? (\r\n            <button onClick={handleStopClick} className=\"stop-button\">\r\n              Stop\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={handleSendMessage}\r\n              disabled={!inputText.trim() || isLoading}\r\n              className=\"send-button\"\r\n            >\r\n              <Send size={18} />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Floating Chat Button */}\r\n      <button\r\n        className=\"chat-toggle-button\"\r\n        onClick={() => setIsChatOpen(!isChatOpen)}\r\n      >\r\n        {isChatOpen ? <X size={24} /> : <MessageCircle size={24} />}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}