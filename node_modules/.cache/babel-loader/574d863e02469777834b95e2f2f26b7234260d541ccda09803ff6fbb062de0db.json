{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BhavyaPaliwal\\\\ai-tutor-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MessageCircle, X, Send, Bot, User } from 'lucide-react';\nimport { getApiUrl } from './config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: '1',\n    text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\n    sender: 'bot',\n    timestamp: new Date()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isStopped, setIsStopped] = useState(false); // NEW state\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (isChatOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isChatOpen]);\n  const handleStop = () => {\n    setIsStopped(true);\n    setIsLoading(false); // allow sending new messages immediately\n  };\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isLoading) return;\n    setIsStopped(false); // reset stop flag for new messages\n\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsLoading(true);\n    const botMessageId = (Date.now() + 1).toString();\n    const streamingMessage = {\n      id: botMessageId,\n      text: '',\n      sender: 'bot',\n      timestamp: new Date(),\n      isStreaming: true\n    };\n    setMessages(prev => [...prev, streamingMessage]);\n    try {\n      const apiUrl = getApiUrl('/api/Tutor/ask');\n      const requestBody = {\n        question: inputText\n      };\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      const jsonResponse = await response.json();\n      let answer = jsonResponse.answer || jsonResponse.message || jsonResponse.response || jsonResponse.content || '';\n      const formatResponse = text => text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>').replace(/`([^`]+)`/g, '<code>$1</code>').replace(/\\n/g, '<br>');\n      let displayText = '';\n      for (let i = 0; i < answer.length; i++) {\n        if (isStopped) break; // ðŸš€ stop showing more characters\n        displayText += answer[i];\n        const formattedText = formatResponse(displayText);\n        setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n          ...msg,\n          text: formattedText\n        } : msg));\n        await new Promise(resolve => setTimeout(resolve, 20));\n      }\n      setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n        ...msg,\n        isStreaming: false\n      } : msg));\n    } catch (error) {\n      setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n        ...msg,\n        text: `Error: ${String(error)}`,\n        isStreaming: false\n      } : msg));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      isLoading ? handleStop() : handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-widget ${isChatOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-content\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            className: \"chat-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Tutor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              children: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsChatOpen(false),\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user' : 'bot'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.sender === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              dangerouslySetInnerHTML: {\n                __html: message.text\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), message.isStreaming && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"typing-indicator\",\n              children: \"\\u258B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your question...\",\n          disabled: isLoading && !isStopped,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isLoading ? handleStop : handleSendMessage,\n          className: \"send-button\",\n          children: isLoading ? \"Stop\" : /*#__PURE__*/_jsxDEV(Send, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-toggle-button\",\n      onClick: () => setIsChatOpen(!isChatOpen),\n      children: isChatOpen ? /*#__PURE__*/_jsxDEV(X, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(MessageCircle, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MnDqyBgk/NnVE1a+muz6Y19YG14=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageCircle","X","Send","Bot","User","getApiUrl","jsxDEV","_jsxDEV","App","_s","isChatOpen","setIsChatOpen","messages","setMessages","id","text","sender","timestamp","Date","inputText","setInputText","isLoading","setIsLoading","isStopped","setIsStopped","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","handleStop","handleSendMessage","trim","userMessage","now","toString","prev","botMessageId","streamingMessage","isStreaming","apiUrl","requestBody","question","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","statusText","jsonResponse","json","answer","message","content","formatResponse","replace","displayText","i","length","formattedText","map","msg","Promise","resolve","setTimeout","error","String","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","dangerouslySetInnerHTML","__html","toLocaleTimeString","hour","minute","ref","type","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/BhavyaPaliwal/ai-tutor-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { MessageCircle, X, Send, Bot, User } from 'lucide-react';\r\nimport { getApiUrl } from './config';\r\nimport './App.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  isStreaming?: boolean;\r\n}\r\n\r\nfunction App() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: '1',\r\n      text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\r\n      sender: 'bot',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isStopped, setIsStopped] = useState(false); // NEW state\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isChatOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isChatOpen]);\r\n\r\n  const handleStop = () => {\r\n    setIsStopped(true);\r\n    setIsLoading(false); // allow sending new messages immediately\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim() || isLoading) return;\r\n\r\n    setIsStopped(false); // reset stop flag for new messages\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n    setIsLoading(true);\r\n\r\n    const botMessageId = (Date.now() + 1).toString();\r\n    const streamingMessage: Message = {\r\n      id: botMessageId,\r\n      text: '',\r\n      sender: 'bot',\r\n      timestamp: new Date(),\r\n      isStreaming: true\r\n    };\r\n\r\n    setMessages(prev => [...prev, streamingMessage]);\r\n\r\n    try {\r\n      const apiUrl = getApiUrl('/api/Tutor/ask');\r\n      const requestBody = { question: inputText };\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n\r\n      const jsonResponse = await response.json();\r\n      let answer = jsonResponse.answer || jsonResponse.message || jsonResponse.response || jsonResponse.content || '';\r\n\r\n      const formatResponse = (text: string) =>\r\n        text\r\n          .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n          .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n          .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>')\r\n          .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n          .replace(/\\n/g, '<br>');\r\n\r\n      let displayText = '';\r\n      for (let i = 0; i < answer.length; i++) {\r\n        if (isStopped) break; // ðŸš€ stop showing more characters\r\n        displayText += answer[i];\r\n        const formattedText = formatResponse(displayText);\r\n        setMessages(prev =>\r\n          prev.map(msg =>\r\n            msg.id === botMessageId ? { ...msg, text: formattedText } : msg\r\n          )\r\n        );\r\n        await new Promise(resolve => setTimeout(resolve, 20));\r\n      }\r\n\r\n      setMessages(prev =>\r\n        prev.map(msg =>\r\n          msg.id === botMessageId ? { ...msg, isStreaming: false } : msg\r\n        )\r\n      );\r\n\r\n    } catch (error) {\r\n      setMessages(prev =>\r\n        prev.map(msg =>\r\n          msg.id === botMessageId\r\n            ? { ...msg, text: `Error: ${String(error)}`, isStreaming: false }\r\n            : msg\r\n        )\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      isLoading ? handleStop() : handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={`chat-widget ${isChatOpen ? 'open' : ''}`}>\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-header-content\">\r\n            <Bot className=\"chat-icon\" />\r\n            <div>\r\n              <h3>AI Tutor</h3>\r\n              <span className=\"status\">Online</span>\r\n            </div>\r\n          </div>\r\n          <button className=\"close-button\" onClick={() => setIsChatOpen(false)}>\r\n            <X size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message) => (\r\n            <div key={message.id} className={`message ${message.sender === 'user' ? 'user' : 'bot'}`}>\r\n              <div className=\"message-avatar\">\r\n                {message.sender === 'user' ? <User size={16} /> : <Bot size={16} />}\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <div className=\"message-text\" dangerouslySetInnerHTML={{ __html: message.text }} />\r\n                {message.isStreaming && <span className=\"typing-indicator\">â–‹</span>}\r\n                <div className=\"message-time\">\r\n                  {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"chat-input-container\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your question...\"\r\n            disabled={isLoading && !isStopped}\r\n            className=\"chat-input\"\r\n          />\r\n          <button\r\n            onClick={isLoading ? handleStop : handleSendMessage}\r\n            className=\"send-button\"\r\n          >\r\n            {isLoading ? \"Stop\" : <Send size={18} />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"chat-toggle-button\" onClick={() => setIsChatOpen(!isChatOpen)}>\r\n        {isChatOpen ? <X size={24} /> : <MessageCircle size={24} />}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}