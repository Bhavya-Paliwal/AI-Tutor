{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BhavyaPaliwal\\\\ai-tutor-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MessageCircle, X, Send, Bot, User } from 'lucide-react';\nimport { getApiUrl } from './config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: '1',\n    text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\n    sender: 'bot',\n    timestamp: new Date()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (isChatOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isChatOpen]);\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsLoading(true);\n\n    // Add a streaming bot message\n    const botMessageId = (Date.now() + 1).toString();\n    const streamingMessage = {\n      id: botMessageId,\n      text: '',\n      sender: 'bot',\n      timestamp: new Date(),\n      isStreaming: true\n    };\n    setMessages(prev => [...prev, streamingMessage]);\n    try {\n      // Call your .NET Web API\n      const apiUrl = getApiUrl('/api/Tutor/ask');\n      console.log('Calling API:', apiUrl);\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputText\n        })\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      // Check if response is streaming or JSON\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        // Handle JSON response\n        const jsonResponse = await response.json();\n        const answer = jsonResponse.answer || jsonResponse.message || JSON.stringify(jsonResponse);\n\n        // Simulate streaming by updating the message character by character\n        let displayText = '';\n        for (let i = 0; i < answer.length; i++) {\n          displayText += answer[i];\n          setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n            ...msg,\n            text: displayText\n          } : msg));\n          // Add a small delay to simulate streaming\n          await new Promise(resolve => setTimeout(resolve, 20));\n        }\n      } else {\n        var _response$body;\n        // Handle streaming response\n        const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n        if (!reader) {\n          throw new Error('No response body');\n        }\n        let accumulatedText = '';\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) break;\n          const chunk = new TextDecoder().decode(value);\n          accumulatedText += chunk;\n\n          // Update the streaming message\n          setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n            ...msg,\n            text: accumulatedText\n          } : msg));\n        }\n      }\n\n      // Mark streaming as complete\n      setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n        ...msg,\n        isStreaming: false\n      } : msg));\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      setMessages(prev => prev.map(msg => msg.id === botMessageId ? {\n        ...msg,\n        text: `Error: ${errorMessage}. Please check your backend connection.`,\n        isStreaming: false\n      } : msg));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-widget ${isChatOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-content\",\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            className: \"chat-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Tutor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              children: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsChatOpen(false),\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user' : 'bot'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.sender === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: [message.text, message.isStreaming && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"typing-indicator\",\n                children: \"\\u258B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your question...\",\n          disabled: isLoading,\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputText.trim() || isLoading,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-toggle-button\",\n      onClick: () => setIsChatOpen(!isChatOpen),\n      children: isChatOpen ? /*#__PURE__*/_jsxDEV(X, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(MessageCircle, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6S7/DBQAAGZw6MLFC0TyGxcme+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageCircle","X","Send","Bot","User","getApiUrl","jsxDEV","_jsxDEV","App","_s","isChatOpen","setIsChatOpen","messages","setMessages","id","text","sender","timestamp","Date","inputText","setInputText","isLoading","setIsLoading","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","handleSendMessage","trim","userMessage","now","toString","prev","botMessageId","streamingMessage","isStreaming","apiUrl","console","log","response","fetch","method","headers","body","JSON","stringify","message","status","ok","Error","statusText","contentType","get","includes","jsonResponse","json","answer","displayText","i","length","map","msg","Promise","resolve","setTimeout","_response$body","reader","getReader","accumulatedText","done","value","read","chunk","TextDecoder","decode","error","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","toLocaleTimeString","hour","minute","ref","type","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/BhavyaPaliwal/ai-tutor-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { MessageCircle, X, Send, Bot, User } from 'lucide-react';\r\nimport { getApiUrl } from './config';\r\nimport './App.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  isStreaming?: boolean;\r\n}\r\n\r\nfunction App() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: '1',\r\n      text: \"Hello! I'm your AI Tutor. I'm here to help you learn and answer any questions you might have. What would you like to learn today?\",\r\n      sender: 'bot',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isChatOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isChatOpen]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim() || isLoading) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n    setIsLoading(true);\r\n\r\n    // Add a streaming bot message\r\n    const botMessageId = (Date.now() + 1).toString();\r\n    const streamingMessage: Message = {\r\n      id: botMessageId,\r\n      text: '',\r\n      sender: 'bot',\r\n      timestamp: new Date(),\r\n      isStreaming: true\r\n    };\r\n\r\n    setMessages(prev => [...prev, streamingMessage]);\r\n\r\n    try {\r\n      // Call your .NET Web API\r\n      const apiUrl = getApiUrl('/api/Tutor/ask');\r\n      console.log('Calling API:', apiUrl);\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          message: inputText\r\n        })\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      // Check if response is streaming or JSON\r\n      const contentType = response.headers.get('content-type');\r\n      \r\n      if (contentType && contentType.includes('application/json')) {\r\n        // Handle JSON response\r\n        const jsonResponse = await response.json();\r\n        const answer = jsonResponse.answer || jsonResponse.message || JSON.stringify(jsonResponse);\r\n        \r\n        // Simulate streaming by updating the message character by character\r\n        let displayText = '';\r\n        for (let i = 0; i < answer.length; i++) {\r\n          displayText += answer[i];\r\n          setMessages(prev => prev.map(msg => \r\n            msg.id === botMessageId \r\n              ? { ...msg, text: displayText }\r\n              : msg\r\n          ));\r\n          // Add a small delay to simulate streaming\r\n          await new Promise(resolve => setTimeout(resolve, 20));\r\n        }\r\n      } else {\r\n        // Handle streaming response\r\n        const reader = response.body?.getReader();\r\n        if (!reader) {\r\n          throw new Error('No response body');\r\n        }\r\n\r\n        let accumulatedText = '';\r\n        \r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n          \r\n          if (done) break;\r\n          \r\n          const chunk = new TextDecoder().decode(value);\r\n          accumulatedText += chunk;\r\n          \r\n          // Update the streaming message\r\n          setMessages(prev => prev.map(msg => \r\n            msg.id === botMessageId \r\n              ? { ...msg, text: accumulatedText }\r\n              : msg\r\n          ));\r\n        }\r\n      }\r\n\r\n      // Mark streaming as complete\r\n      setMessages(prev => prev.map(msg => \r\n        msg.id === botMessageId \r\n          ? { ...msg, isStreaming: false }\r\n          : msg\r\n      ));\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\r\n      setMessages(prev => prev.map(msg => \r\n        msg.id === botMessageId \r\n          ? { ...msg, text: `Error: ${errorMessage}. Please check your backend connection.`, isStreaming: false }\r\n          : msg\r\n      ));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Chat Widget */}\r\n      <div className={`chat-widget ${isChatOpen ? 'open' : ''}`}>\r\n        {/* Chat Header */}\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-header-content\">\r\n            <Bot className=\"chat-icon\" />\r\n            <div>\r\n              <h3>AI Tutor</h3>\r\n              <span className=\"status\">Online</span>\r\n            </div>\r\n          </div>\r\n          <button \r\n            className=\"close-button\"\r\n            onClick={() => setIsChatOpen(false)}\r\n          >\r\n            <X size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Chat Messages */}\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message) => (\r\n            <div \r\n              key={message.id} \r\n              className={`message ${message.sender === 'user' ? 'user' : 'bot'}`}\r\n            >\r\n              <div className=\"message-avatar\">\r\n                {message.sender === 'user' ? <User size={16} /> : <Bot size={16} />}\r\n              </div>\r\n              <div className=\"message-content\">\r\n                <div className=\"message-text\">\r\n                  {message.text}\r\n                  {message.isStreaming && <span className=\"typing-indicator\">▋</span>}\r\n                </div>\r\n                <div className=\"message-time\">\r\n                  {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Chat Input */}\r\n        <div className=\"chat-input-container\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your question...\"\r\n            disabled={isLoading}\r\n            className=\"chat-input\"\r\n          />\r\n          <button \r\n            onClick={handleSendMessage}\r\n            disabled={!inputText.trim() || isLoading}\r\n            className=\"send-button\"\r\n          >\r\n            <Send size={18} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Floating Chat Button */}\r\n      <button \r\n        className=\"chat-toggle-button\"\r\n        onClick={() => setIsChatOpen(!isChatOpen)}\r\n      >\r\n        {isChatOpen ? <X size={24} /> : <MessageCircle size={24} />}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}